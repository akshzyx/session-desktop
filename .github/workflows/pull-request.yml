# This script will run tests anytime a pull request is added
name: Session Test

on:
  pull_request:
    branches:
      - clearnet
      - unstable
      - unstable1

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022, macos-11, ubuntu-20.04]
    env:
      SIGNAL_ENV: production
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - run: git config --global core.autocrlf false

      - name: Checkout git repo
        uses: actions/checkout@v3

      # we stay on v2 even if there is a v3 because the v3 logic is less flexible for our usecase
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('package.json', 'pnpm-lock.yaml', 'patches/**') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      #Not having this will break the windows build because the PATH won't be set by msbuild.
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.3.1
        if: runner.os == 'Windows'

      - name: Setup node for windows
        if: runner.os == 'Windows'
        run: |
          pnpm install --global node-gyp@latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate and concat files
        run: pnpm build-everything

      - name: Lint Files
        # no need to lint files on all platforms. Just do it once on the quicker one
        if: runner.os == 'Linux'
        run: pnpm lint-full

      - name: Unit Test
        run: pnpm test
